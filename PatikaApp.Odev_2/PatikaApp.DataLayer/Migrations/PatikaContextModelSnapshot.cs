// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatikaApp.DataLayer.Concrete;

namespace PatikaApp.DataLayer.Migrations
{
    [DbContext(typeof(PatikaContext))]
    partial class PatikaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("PatikaApp.EntityLayer.AdminInfo", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdminEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminName")
                        .HasColumnType("TEXT");

                    b.Property<int>("BootcampId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BootcampInfoBootcampId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EducatorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EducatorInfoEducatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdminId");

                    b.HasIndex("BootcampInfoBootcampId");

                    b.HasIndex("EducatorInfoEducatorId");

                    b.ToTable("AdminInfos");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            AdminEmail = "mahir@hotmail.com",
                            AdminName = "Mahir",
                            BootcampId = 1,
                            EducatorId = 1
                        },
                        new
                        {
                            AdminId = 2,
                            AdminEmail = "ince@hotmail.com",
                            AdminName = "Serkan",
                            BootcampId = 2,
                            EducatorId = 2
                        });
                });

            modelBuilder.Entity("PatikaApp.EntityLayer.BootcampInfo", b =>
                {
                    b.Property<int>("BootcampId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BootcampContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("BootcampName")
                        .HasColumnType("TEXT");

                    b.HasKey("BootcampId");

                    b.ToTable("BootcampInfos");

                    b.HasData(
                        new
                        {
                            BootcampId = 1,
                            BootcampContent = ".Net Eğitimi",
                            BootcampName = "Arvato Bootcamp"
                        },
                        new
                        {
                            BootcampId = 2,
                            BootcampContent = "React Eğitimi",
                            BootcampName = "Kodluyoruz Bootcamp"
                        });
                });

            modelBuilder.Entity("PatikaApp.EntityLayer.EducatorInfo", b =>
                {
                    b.Property<int>("EducatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EducatorEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("EducatorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EducatorSurName")
                        .HasColumnType("TEXT");

                    b.HasKey("EducatorId");

                    b.ToTable("EducatorInfos");

                    b.HasData(
                        new
                        {
                            EducatorId = 1,
                            EducatorEmail = "inceSerkan@gmail.com",
                            EducatorName = "Serkan",
                            EducatorSurName = "Ince"
                        },
                        new
                        {
                            EducatorId = 2,
                            EducatorEmail = "guzel@gmail.com",
                            EducatorName = "Zeynep",
                            EducatorSurName = "Guzel"
                        });
                });

            modelBuilder.Entity("PatikaApp.EntityLayer.AdminInfo", b =>
                {
                    b.HasOne("PatikaApp.EntityLayer.BootcampInfo", "BootcampInfo")
                        .WithMany("AdminInfos")
                        .HasForeignKey("BootcampInfoBootcampId");

                    b.HasOne("PatikaApp.EntityLayer.EducatorInfo", "EducatorInfo")
                        .WithMany("AdminInfos")
                        .HasForeignKey("EducatorInfoEducatorId");

                    b.Navigation("BootcampInfo");

                    b.Navigation("EducatorInfo");
                });

            modelBuilder.Entity("PatikaApp.EntityLayer.BootcampInfo", b =>
                {
                    b.Navigation("AdminInfos");
                });

            modelBuilder.Entity("PatikaApp.EntityLayer.EducatorInfo", b =>
                {
                    b.Navigation("AdminInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
